@page "/addgame"
@using MyBlazorClient.Services

<PageTitle>Add Game</PageTitle>
@if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}

<form>
    <div class="form-group">
        <label for="title">Title</label>
        <input type="text" class="form-control" id="title" @bind="game.Title" required>
    </div>
    <div class="form-group">
        <label for="date">Release Date</label>
        <input type="date" class="form-control" id="date" @bind="game.Date" required>
    </div>
    <div class="form-group">
        <label for="developer">Developer</label>
        <input type="text" class="form-control" id="developer" @bind="game.Developer" required>
    </div>
    <div class="form-group">
        <label for="genre">Genre</label>
        <input type="text" class="form-control" id="genre" @bind="game.Genre" required>
    </div>
    <div class="form-group">
        <label for="pegi">PEGI Rating</label>
        <input type="text" class="form-control" id="pegi" @bind="game.Pegi" required>
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <textarea class="form-control" id="description" @bind="game.Description" rows="3"></textarea>
    </div>
    <button type="button" class="btn btn-primary" @onclick="HandleSubmit">Add Game</button>
</form>

@code {
    private AddGameItem game = new AddGameItem();
    private string errorMessage;

    [Inject]
    public IApiComunicationService ApiComunicationService { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    private async Task HandleSubmit()
    {
        try
        {
            bool result = await ApiComunicationService.AddGame(game);
            if (result)
            {
                // Optionally navigate to a different page upon successful addition
                NavigationManager.NavigateTo("/"); // Navigate to home page or wherever you want
            }
            else
            {
                errorMessage = "Failed to add game.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
    }
}



